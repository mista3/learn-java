import { Divider, Typography } from 'antd';
import { CodeBlock, Compiler, Solution, TasksLabel } from '../../components';

const { Title, Paragraph, Text } = Typography;

export const LectureCondition = () => {
  return <>
    <Title level={2}>–£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</Title>
    <Paragraph>
      –£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–Ω–æ–≥–∏—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.
      –î–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –ø—É—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.
    </Paragraph>
    <Paragraph>
      –í —è–∑—ã–∫–µ Java –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: <Text strong>if/else</Text> –∏ <Text strong>switch/case</Text>.
    </Paragraph>
    <Title level={3}>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if/else</Title>
    <Paragraph>–í—ã—Ä–∞–∂–µ–Ω–∏–µ if/else –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å—Ç–∏–Ω–Ω–æ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å–ª–æ–≤–∏—è –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–æ–¥:</Paragraph>
    <CodeBlock>
      {`int num1 = 6;
int num2 = 4;
if (num1 > num2) {
    System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ"); 
}`}
    </CodeBlock>
    <Paragraph>–ü–æ—Å–ª–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ if —Å—Ç–∞–≤–∏—Ç—Å—è —É—Å–ª–æ–≤–∏–µ. –ï—Å–ª–∏ —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ –≤–µ—Ä–Ω–æ, —Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–µ—â–µ–Ω –≤ –±–ª–æ–∫–µ, –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–π –≤ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏.</Paragraph>
    <Paragraph>
      –¢–∞–∫ –∫–∞–∫, –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ, —Ç–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ <Text strong>num1</Text> {'>'} <Text strong>num2</Text> –∏—Å—Ç–∏–Ω–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ <Text strong>true</Text>. 
      –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –±–ª–æ–∫ –∫–æ–¥–∞ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ—Å—è —Ç–∞–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –º–µ—Ç–æ–¥ <Text code>System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ");</Text>. 
      –ï—Å–ª–∏ –±—ã –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–ª–∏ —Ä–∞–≤–Ω–æ –µ–º—É, —Ç–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ –±–ª–æ–∫–µ <Text strong>if</Text> –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –±—ã. 
    </Paragraph>
    <Paragraph>–ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—è —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –¥–µ–π—Å—Ç–≤–∏—è, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫ <Text strong>else</Text>:</Paragraph>
    <CodeBlock>
      {`int num1 = 6;
int num2 = 4;
if(num1 > num2) {
    System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ"); 
}
else {
    System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ");
}`}
    </CodeBlock>
    <Paragraph>–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –≤ <Text strong>if</Text> –æ–∫–∞–∂–µ—Ç—Å—è –ª–æ–∂–Ω—ã–º, –Ω–∞—á–Ω–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –±–ª–æ–∫ <Text strong>else</Text>:</Paragraph>
    <Paragraph>
      –ü—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —á–∏—Å–µ–ª –º–æ–∂–Ω–æ –Ω–∞—Å—á–∏—Ç–∞—Ç—å —Ç—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ, –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ –∏ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã.
      –° –ø–æ–º–æ—â—å—é –≤—ã—Ä–∞–∂–µ–Ω–∏—è <Text strong>else if</Text>, –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è:
    </Paragraph>
    <CodeBlock>
      {`int num1 = 6;
int num2 = 4;
if(num1 > num2){
    System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ"); 
}
else if (num1 < num2){
    System.out.println("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ");
}
else {
    System.out.println("–ß–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã");
}`}
    </CodeBlock>
    <Paragraph>–ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π, —Ç–æ —ç—Ç–∏ —É—Å–ª–æ–≤–∏—è –º–æ–∂–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å.</Paragraph>
    <Title level={3}>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è switch</Title>
    <Paragraph>
      –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è <Text strong>switch/case</Text> –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ <Text strong>if/else</Text>, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π.
      –ü–æ—Å–ª–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ <Text strong>switch</Text> –≤ —Å–∫–æ–±–∫–∞—Ö –∏–¥–µ—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
      –ó–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –ø–æ–º–µ—â–µ–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ <Text strong>—Åase</Text>.
      –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, —Ç–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ <Text strong>—Åase</Text>.
    </Paragraph>
    <Paragraph>
      –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ <Text strong>—Åase</Text> —Å—Ç–∞–≤–∏—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä <Text strong>break</Text>, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –±–ª–æ–∫–æ–≤.
    </Paragraph>
    <Paragraph>
      –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –±—É–¥–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Ç–æ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫ <Text strong>default</Text> (—ç—Ç–æ—Ç –±–ª–æ–∫ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º).
    </Paragraph>
    <CodeBlock>
      {`int num = 5;
switch(num){
    case 1: 
        System.out.println("—á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 1");
        break;
    case 5: 
        System.out.println("—á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 8");
        num++;
        break;
    case 9: 
        System.out.println("—á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 9");
        break
    default:
        System.out.println("—á–∏—Å–ª–æ –Ω–µ —Ä–∞–≤–Ω–æ 1, 5, 9");
}`}
    </CodeBlock>
    <TasksLabel/>
    <Divider />
    <Title level={4}>–û–∫–æ–Ω—á–∞–Ω–∏—è</Title>
    <Paragraph>
      –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–≥–ª–∞—Å—É–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞, –∏—Å—Ö–æ–¥—è –∏–∑ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∞ –∫–æ–Ω—Å–æ–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞.
      –ù–∞–ø—Ä–∏–º–µ—Ä: 1 —Ç–µ—Ç—Ä–∞–¥—å, 2 —Ç–µ—Ç—Ä–∞–¥–∏, 5 —Ç–µ—Ç—Ä–∞–¥–µ–π.
    </Paragraph>
    <Paragraph>
      –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è:
      <ul>
        <li>–ß–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3, –µ—Å–ª–∏ —Å—É–º–º–∞ –µ–≥–æ —Ü–∏—Ñ—Ä –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3.</li>
      </ul>
    </Paragraph>
    <Compiler />
    <Solution>
      <CodeBlock>
        {`import java.util.Scanner;

public class Example {
    public static void main (String args[]){
        Scanner in = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ");
        int amount = in.nextInt();

        int remainder10 = amount % 10;
        int remainder100 = amount % 100;

        if (remainder100 >= 5 && remainder100 <= 20) {
            System.out.println(amount + " —Ç–µ—Ç—Ä–∞–¥–µ–π");
        }
        else if (remainder10 == 1) {
            System.out.println(amount + " —Ç–µ—Ç—Ä–∞–¥—å");
        }
        else if (remainder10 >= 2 && remainder10 <= 4) {
            System.out.println(amount + " —Ç–µ—Ç—Ä–∞–¥–∏");
        }
        else System.out.println(amount + " —Ç–µ—Ç—Ä–∞–¥–µ–π");
    }
}`}
      </CodeBlock>
    </Solution>
    <Divider />
    <Title level={4}>–ß–µ—Ç–Ω–æ—Å—Ç—å –∏ –¥–µ–ª–∏–º–æ—Å—Ç—å –Ω–∞ 3</Title>
    <Paragraph>
      –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ç—ã—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
      –≠—Ç–æ —á–∏—Å–ª–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å –∏ –Ω–∞ –¥–µ–ª–∏–º–æ—Å—Ç—å –Ω–∞ 3.
      –í—ã–≤–µ—Å—Ç–∏ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å –¥–µ–ª–∏—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –Ω–∞ 3 –∏ –∫–∞–∫–∏–µ –æ–Ω–æ —è–≤–ª—è–µ—Ç—Å—è (—á–µ—Ç–Ω–æ–µ / –Ω–µ—á–µ—Ç–Ω–æ–µ).
    </Paragraph>
    <Paragraph>
      –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è:
      <ul>
        <li>–ß–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3, –µ—Å–ª–∏ —Å—É–º–º–∞ –µ–≥–æ —Ü–∏—Ñ—Ä –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3.</li>
      </ul>
    </Paragraph>
    <Compiler />
    <Solution>
      <CodeBlock>
        {`import java.util.Scanner;

public class Example {
    public static void main (String args[]){
        Scanner in = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ");
        int number = in.nextInt();
        int numberCopy = number;

        int sum = 0;
        for (; number > 0;){
            sum += number % 10;
            number /= 10;
        }

        if ((sum % 3 == 0) && (numberCopy % 2 == 0)){
            System.out.println("–ß–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3 –∏ —è–≤–ª—è–µ—Ç—Å—è —á–µ—Ç–Ω—ã–º");
        }
        else if ((sum % 3 == 0) && (numberCopy % 2 > 0)) {
            System.out.println("–ß–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3 –∏ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ—á–µ—Ç–Ω—ã–º");
        }
        else System.out.println("–ß–∏—Å–ª–æ –Ω–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3");
    }
}`}
      </CodeBlock>
    </Solution>
    <Divider />
    <Title level={4}>ü¶ß –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</Title>
    <Paragraph>
      –ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å —Ç–∞–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:
      <ul>
        <li>—Å–ª–æ–∂–µ–Ω–∏–µ</li>
        <li>–≤—ã—á–∏—Ç–∞–Ω–∏–µ</li>
        <li>—É–º–Ω–æ–∂–µ–Ω–∏–µ</li>
        <li>–¥–µ–ª–µ–Ω–∏–µ</li>
        <li>–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è</li>
      </ul>
    </Paragraph>
    <Paragraph>
      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç 2 —á–∏—Å–ª–∞. –î–∞–ª–µ–µ –æ–Ω —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—Ç, –∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —á–∏—Å–ª–∞–º–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é switch‚Ä¶case).
      –ù–∞ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–æ–¥–∏—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.
    </Paragraph>
    <Compiler />
    <Solution>
      <CodeBlock>
        {`import java.util.Scanner;

public class Example {
    public static void main (String args[]){
        Scanner in = new Scanner(System.in);
        System.out.println("\\t\\t\\t –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä");
        System.out.println("–í–≤–µ–¥–∏—Ç–µ 2 —á–∏—Å–ª–∞: ");
        int num1 = in.nextInt();
        int num2 = in.nextInt();
        System.out.println("1. –°–ª–æ–∂–µ–Ω–∏–µ\\n2. –í—ã—á–∏—Ç–∞–Ω–∏–µ\\n3. –£–º–Ω–æ–∂–µ–Ω–∏–µ\\n4. –î–µ–ª–µ–Ω–∏–µ\\n5. –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è");
        System.out.print("\\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: ");

        int result;
        int item = in.nextInt();
        switch (item){
            case 1:
                result = num1 + num2;
                System.out.println("–°—É–º–º–∞ —á–∏—Å–µ–ª: " + result);
                break;
            case 2:
                result = num1 - num2;
                System.out.println("–†–∞–∑–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª: " + result);
                break;
            case 3:
                result = num1 * num2;
                System.out.println("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —á–∏—Å–µ–ª: " + result);
                break;
            case 4:
                result = num1 / num2;
                System.out.println("–ß–∞—Å—Ç–Ω–æ–µ —á–∏—Å–µ–ª: " + result);
                break;
            case 5:
                result = num1 % num2;
                System.out.println("–û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —á–∏—Å–µ–ª: " + result);
                break;
            default:
                System.out.println("–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω –ø—É–Ω–∫—Ç");
        }
    }
}`}
      </CodeBlock>
    </Solution>
    <Divider />
  </>
}